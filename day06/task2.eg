# Advent of Code (AoC) - day 6, task 2 - brute force solution

import "prelude.eg"
import "os.ego"
import "generator.eg"
import "dictionary.eg"
import "regex.ego"

using System
using OS
using List

def input = let L = read_line stdin in if eof stdin then {} else {L | input}

val number = Regex::compile "[0-9]+"

def parse = do map (do Regex::matches number |> foldr [X Y -> X+Y] "" |> to_int)

def solutions =
    [{X,T} -> from_to 0 X |> map [T0 -> (X - T0) * T0] |> filter [T0 -> T < T0]] 

def main =
    input |> parse |> solutions |> length
